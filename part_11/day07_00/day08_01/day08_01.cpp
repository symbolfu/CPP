
/*
	静态编译和动态编译
		背景：
			程序调用函数时，将使用哪个可执行代码块呢？
				编译器负责；
		函数名联编：binding
			将源代码中的函数调用解释为执行特定的函数代码块；
			这种函数名联编在c语言中非常简单，一个函数名对于一个函数代码块；
			但是在c++中存在域以及重载等技术，使得函数名联编变得复杂；

		静态联编：static binding
			在编译过程中进行联编
		动态联编： dynamic binding
			对象指针使用哪个方法（多态场景）在编译阶段无法识别，需要在程序运行时才知道；
			所以编译器必须生成能够在程序运行时选择正确的虚方法的代码；


*/

int main()
{


	return 0;
}